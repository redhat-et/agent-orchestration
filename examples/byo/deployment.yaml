apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${AGENT_NAME}
  labels:
    app: ${AGENT_NAME}
    ai.openshift.io/agent.class: "a2a"
    ai.openshift.io/agent.name: "${AGENT_NAME}"
  annotations:
    ai.openshift.io/agent.endpoint: "/.well-known/agent.json"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${AGENT_NAME}
  template:
    metadata:
      labels:
        app: ${AGENT_NAME}
        ai.openshift.io/agent.class: "a2a"
        ai.openshift.io/agent.name: "${AGENT_NAME}"
    spec:
      containers:
      - name: ${AGENT_NAME}
        image: ${AGENT_NAME}:latest
        ports:
        - containerPort: 10000
        command: ["python3", "agent.py"]
        args: ["--config", "${CONFIG_ARG}"]
        env:
        - name: PORT
          value: "10000"
        - name: HOST
          value: "0.0.0.0"
        - name: AGENT_NAME
          value: "${AGENT_NAME}"
        - name: CONFIG_FILE
          value: "${CONFIG_FILE}"
---
apiVersion: v1
kind: Service
metadata:
  name: ${AGENT_NAME}-service
  labels:
    app: ${AGENT_NAME}
    ai.openshift.io/agent.class: "a2a"
    ai.openshift.io/agent.name: "${AGENT_NAME}"
spec:
  selector:
    app: ${AGENT_NAME}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 10000
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ${AGENT_NAME}
  labels:
    app: ${AGENT_NAME}
    ai.openshift.io/agent.class: "a2a"
    ai.openshift.io/agent.name: "${AGENT_NAME}"
  annotations:
    ai.openshift.io/agent.endpoint: "/.well-known/agent.json"
spec:
  to:
    kind: Service
    name: ${AGENT_NAME}-service
  port:
    targetPort: 10000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
